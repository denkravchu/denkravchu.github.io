/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//Плавный скролл\nvar hooks = document.querySelectorAll('a[href*=\"#\"]');\n\nvar _iterator = _createForOfIteratorHelper(hooks),\n    _step;\n\ntry {\n  var _loop = function _loop() {\n    var el = _step.value;\n    el.addEventListener('click', function (e) {\n      e.preventDefault();\n      var blockID = el.getAttribute('href').substr(1);\n      console.log(e.preventDefault);\n      document.getElementById(blockID).scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    });\n  };\n\n  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n    _loop();\n  }\n} catch (err) {\n  _iterator.e(err);\n} finally {\n  _iterator.f();\n}\n\nif (window.matchMedia(\"(min-width: 1080px)\").matches) {\n  var animate = function animate(name) {\n    var stageNumber = name.split('-')[1];\n    var element = name.split('-')[0];\n\n    switch (element) {\n      case 'background':\n        animationZone.style.left = stageNumber < 0 ? \"\".concat(100, \"%\") : stageNumber > 50 ? \"\".concat(50, \"%\") : \"\".concat(100 - stageNumber, \"%\");\n        break;\n\n      case 'indicator':\n        indicator.style.height = \"\".concat(stageNumber / (allStages * 2 / 100) * 2, \"%\");\n        break;\n\n      case 'circle':\n        stageNumber <= length ? circles[0].classList.add('circleActive') : circles[0].classList.remove('circleActive');\n        stageNumber <= allStages - length && stageNumber > length ? circles[1].classList.add('circleActive') : circles[1].classList.remove('circleActive');\n        stageNumber > allStages - length ? circles[2].classList.add('circleActive') : circles[2].classList.remove('circleActive');\n        break;\n\n      case 'text':\n        stageNumber > 3 ? paragraphs[0].classList.add('frameIn') : paragraphs[0].classList.remove('frameIn');\n\n        if (stageNumber >= length) {\n          paragraphs[0].classList.add('frameOut');\n          paragraphs[1].classList.add('frameIn');\n        } else {\n          paragraphs[0].classList.remove('frameOut');\n          paragraphs[1].classList.remove('frameIn');\n        }\n\n        if (stageNumber >= allStages - length) {\n          paragraphs[1].classList.add('frameOut');\n          paragraphs[2].classList.add('frameIn');\n        } else {\n          paragraphs[1].classList.remove('frameOut');\n          paragraphs[2].classList.remove('frameIn');\n        }\n\n        break;\n    }\n  }; // svg animation\n\n\n  var firstSvgPath = function firstSvgPath(_ref, stageTwo) {\n    var platform = _ref.platform,\n        shadow = _ref.shadow,\n        block1 = _ref.block1,\n        block2 = _ref.block2,\n        block3 = _ref.block3;\n\n    if (stageTwo <= 1) {\n      platform.style.opacity = -0.5 + stageTwo;\n      platform.style.transform = \"scale(\".concat(stageTwo, \")\");\n    }\n\n    if (stageTwo <= 2) {\n      shadow.style.transform = \"translateY(\".concat(8 - stageTwo * 4, \"rem)\");\n      shadow.style.opacity = stageTwo - .5;\n    }\n\n    if (stageTwo > 2.5) {\n      shadow.style.transform = \"translateY(\".concat(stageTwo, \"rem)\");\n      shadow.style.opacity = 3 - stageTwo;\n    }\n\n    if (stageTwo >= 1 && stageTwo <= 2) {\n      platform.style.transform = \"scale(1)\";\n      block1.style.transform = \"translateY(\".concat(-3 + stageTwo * 3 / 2, \"rem)\");\n      block2.style.transform = \"translateY(\".concat(-5 + stageTwo * 5 / 2, \"rem)\");\n      block3.style.transform = \"translateY(\".concat(-8 + stageTwo * 8 / 2, \"rem)\");\n      block1.style.opacity = 1;\n      block2.style.opacity = 1;\n      block3.style.opacity = 1;\n    }\n\n    if (stageTwo < 1) {\n      block1.style.transform = \"translateY(-3rem)\";\n      block2.style.transform = \"translateY(-5rem)\";\n      block3.style.transform = \"translateY(-8rem)\";\n      block1.style.opacity = 0;\n      block2.style.opacity = 0;\n      block3.style.opacity = 0;\n    }\n\n    if (stageTwo > 2.5) {\n      platform.style.transform = \"scale(\".concat(stageTwo - 1.5, \")\");\n      block1.style.transform = \"scale(\".concat(stageTwo - 1.5, \")\");\n      block2.style.transform = \"scale(\".concat(stageTwo - 1.5, \")\");\n      block3.style.transform = \"scale(\".concat(stageTwo - 1.5, \")\");\n      platform.style.opacity = 3 - stageTwo;\n      block1.style.opacity = 3.5 - stageTwo;\n      block2.style.opacity = 3.5 - stageTwo;\n      block3.style.opacity = 3.5 - stageTwo;\n    }\n  };\n\n  var secondSvgPath = function secondSvgPath(_ref2, stageTwo) {\n    var lines = _ref2.lines,\n        computer = _ref2.computer,\n        smallBlocks = _ref2.smallBlocks,\n        _ref2$smallLights = _ref2.smallLights;\n    _ref2$smallLights = _ref2$smallLights === void 0 ? [] : _ref2$smallLights;\n\n    var _ref2$smallLights2 = _slicedToArray(_ref2$smallLights, 3),\n        light1 = _ref2$smallLights2[0],\n        light2 = _ref2$smallLights2[1],\n        light3 = _ref2$smallLights2[2],\n        bigBlock = _ref2.bigBlock,\n        planet = _ref2.planet,\n        lightAround = _ref2.lightAround;\n\n    if (stageTwo < 3) {\n      lines.style.opacity = 0;\n      computer.style.opacity = 0;\n    }\n\n    if (stageTwo >= 3) {\n      lines.style.opacity = 1;\n      computer.style.opacity = 1;\n    }\n\n    if (stageTwo >= 3.5 && stageTwo <= 4) {\n      smallBlocks.style.opacity = 1;\n      smallBlocks.style.transform = \"translateY(\".concat(-4 + stageTwo, \"rem)\");\n    }\n\n    if (stageTwo < 3.5) {\n      smallBlocks.style.opacity = 0;\n      smallBlocks.style.transform = \"translateY(-4rem)\";\n    }\n\n    if (stageTwo >= 4.3) light1.style.opacity = 1;else light1.style.opacity = 0;\n    if (stageTwo >= 4.5) light2.style.opacity = 1;else light2.style.opacity = 0;\n    if (stageTwo >= 4.7) light3.style.opacity = 1;else light3.style.opacity = 0;\n\n    if (stageTwo >= 3.7 && stageTwo <= 4.2) {\n      bigBlock.style.opacity = 1;\n      bigBlock.style.transform = \"translateY(\".concat(-4.2 + stageTwo, \"rem)\");\n    }\n\n    if (stageTwo >= 4.2) lightAround.style.opacity = 1;else lightAround.style.opacity = 0;\n\n    if (stageTwo < 3.7) {\n      bigBlock.style.opacity = 0;\n      bigBlock.style.transform = \"translateY(-4.2rem)\";\n    }\n\n    if (stageTwo >= 4.5) planet.style.opacity = 1;else planet.style.opacity = 0;\n\n    if (stageTwo >= 5) {\n      lines.style.transform = \"scale(\".concat(stageTwo - 3.5, \")\");\n      computer.style.transform = \"scale(\".concat(stageTwo - 3.5, \")\");\n      smallBlocks.style.transform = \"scale(\".concat(stageTwo - 3.5, \")\");\n      light1.style.transform = \"scale(\".concat(stageTwo - 3.5, \")\");\n      light2.style.transform = \"scale(\".concat(stageTwo - 3.5, \")\");\n      light3.style.transform = \"scale(\".concat(stageTwo - 3.5, \")\");\n      bigBlock.style.transform = \"scale(\".concat(stageTwo - 3.5, \")\");\n      planet.style.transform = \"scale(\".concat(stageTwo - 3.5, \")\");\n      lightAround.style.transform = \"scale(\".concat(stageTwo - 3.5, \")\");\n    }\n\n    if (stageTwo >= 4.5 && stageTwo < 5) {\n      lines.style.transform = \"scale(1)\";\n      computer.style.transform = \"scale(1)\";\n      smallBlocks.style.transform = \"scale(1)\";\n      light1.style.transform = \"scale(1)\";\n      light2.style.transform = \"scale(1)\";\n      light3.style.transform = \"scale(1)\";\n      bigBlock.style.transform = \"scale(1)\";\n      planet.style.transform = \"scale(1)\";\n      lightAround.style.transform = \"scale(1)\";\n    }\n  };\n\n  var thirdSvgPath = function thirdSvgPath(_ref3, stageTwo) {\n    var block = _ref3.block,\n        platform = _ref3.platform,\n        shadow = _ref3.shadow,\n        wires = _ref3.wires;\n\n    if (stageTwo < 5) {\n      block.style.transform = \"translateY(-7rem)\";\n      block.style.opacity = 0;\n      platform.style.transform = \"translateY(7rem)\";\n      platform.style.opacity = 0;\n    }\n\n    if (stageTwo >= 5 && stageTwo <= 7) {\n      block.style.transform = \"translateY(\".concat(-7 + stageTwo, \"rem)\");\n      block.style.opacity = -6 + stageTwo;\n      platform.style.transform = \"translateY(\".concat(7 - stageTwo, \"rem)\");\n      platform.style.opacity = -6 + stageTwo;\n    }\n\n    if (stageTwo >= 7.1) {\n      wires.style.opacity = 1;\n      shadow.style.opacity = 1;\n      block.style.opacity = 1;\n      platform.style.transform = \"translateY(0)\";\n      block.style.transform = \"translateY(0)\";\n      platform.style.opacity = 1;\n    }\n\n    if (stageTwo < 7) {\n      shadow.style.opacity = 0;\n      wires.style.opacity = 0;\n    }\n  }; // анимация 2 и 3 экрана\n  //анимация изображений\n\n\n  var methodVisible = function methodVisible(obj, length) {\n    obj.addEventListener('load', function () {\n      addEventListener('scroll', function () {\n        var elements = findElements(obj, length);\n\n        if (obj.offsetTop + obj.offsetHeight / 4 < pageYOffset + innerHeight && obj.offsetTop + obj.offsetHeight / 1.3 > pageYOffset) {\n          styleElements(elements, true);\n        } else styleElements(elements, false);\n      });\n    });\n  };\n\n  var findElements = function findElements(obj, length) {\n    var array = [];\n\n    for (var i = 1; i <= length; i++) {\n      array[i] = obj.contentDocument.querySelector(\".e\".concat(i));\n    }\n\n    return array;\n  };\n\n  var styleElements = function styleElements(array, visible) {\n    var sum = 0;\n\n    for (var i = 1; i < array.length; i++) {\n      array[i].style.transition = \"\".concat(speed, \"s ease .\").concat(sum += i * duration, \"s\");\n      array[i].style.opacity = visible ? 1 : 0;\n    }\n  }; //Анимация текста на странице\n\n\n  var animText = function animText(text) {\n    addEventListener('scroll', function () {\n      for (var i = 0; i < text.length; i++) {\n        if (text[i].offsetTop < pageYOffset + innerHeight) {\n          text[i].classList.remove('unvisible');\n        } else text[i].classList.add('unvisible');\n      }\n    });\n  }; // && (text[i].offsetTop + text[i].offsetHeight > pageYOffset) - для скролла вверх\n  //Анимация clients\n\n\n  //header\n  var nav = document.querySelector('header .wrapper');\n  var main = document.querySelector('main');\n  var whatWeDo = document.querySelector('.space');\n  var navOffset = nav.offsetTop;\n  var mainOffset = main.offsetTop;\n  var pixelLength = whatWeDo.offsetTop + whatWeDo.offsetHeight;\n  addEventListener('scroll', function () {\n    if (window.pageYOffset >= navOffset) {\n      nav.classList.add('navFixed');\n      main.classList.add('mainFixed');\n    } else {\n      nav.classList.remove('navFixed');\n      main.classList.remove('mainFixed');\n    }\n\n    if (window.pageYOffset + innerHeight >= whatWeDo.offsetHeight) {\n      main.classList.add('offset');\n      main.classList.remove('mainFixed');\n    } else {\n      main.classList.remove('offset');\n    }\n  });\n  /* animationZone animation */\n\n  var animationZone = document.querySelector('.animationZone'),\n      indicator = document.querySelector('.scrollIndicator .indicator'),\n      circles = document.querySelectorAll('.circles span'),\n      paragraphs = document.querySelectorAll('main .frame span'); // all animation\n\n  addEventListener('scroll', function () {\n    if (window.pageYOffset + innerHeight <= whatWeDo.offsetHeight) {\n      var stage = Math.floor((pageYOffset - document.querySelector('main').offsetTop) / innerHeight * 10),\n          backgroundStage = Math.floor((pageYOffset - document.querySelector('main').offsetTop) / innerHeight * 100); //background\n\n      animate(\"background-\".concat(backgroundStage)); //line indecator\n\n      animate(\"indicator-\".concat(stage)); //active circle\n\n      animate(\"circle-\".concat(stage)); //frame change\n\n      animate(\"text-\".concat(stage));\n    }\n\n    if (window.pageYOffset + innerHeight > whatWeDo.offsetHeight) {\n      animate(\"background-\".concat(allStages));\n      animate(\"indicator-\".concat(allStages));\n      animate(\"circle-\".concat(allStages));\n      animate(\"text-\".concat(allStages));\n    }\n  });\n  var allStages = 78;\n  var length = Math.floor(allStages / 3);\n  var firstAnimSvgObj = document.querySelector('.firstAnimImage');\n  var secondAnimSvgObj = document.querySelector('.secondAnimImage');\n  var thirdAnimSvgObj = document.querySelector('.thirdAnimImage');\n  firstAnimSvgObj.addEventListener('load', function () {\n    var stageTwo = (pageYOffset - document.querySelector('main').offsetTop) / innerHeight;\n    var firstAnimSvgParts = {\n      platform: firstAnimSvgObj.contentDocument.querySelector(\"#platform\"),\n      shadow: firstAnimSvgObj.contentDocument.querySelector(\"#platformShadow\"),\n      block1: firstAnimSvgObj.contentDocument.querySelector(\"#block1\"),\n      block2: firstAnimSvgObj.contentDocument.querySelector(\"#block2\"),\n      block3: firstAnimSvgObj.contentDocument.querySelector(\"#block3\"),\n      basicStyles: function basicStyles(stageTwo) {\n        firstSvgPath(firstAnimSvgParts, stageTwo);\n      }\n    };\n    var secondAnimSvgParts = {\n      lines: secondAnimSvgObj.contentDocument.querySelector(\"#lines\"),\n      computer: secondAnimSvgObj.contentDocument.querySelector(\"#computer\"),\n      smallBlocks: secondAnimSvgObj.contentDocument.querySelector(\"#smallBlocks\"),\n      smallLights: secondAnimSvgObj.contentDocument.querySelectorAll(\"#smallLight\"),\n      bigBlock: secondAnimSvgObj.contentDocument.querySelector(\"#bigBlock\"),\n      planet: secondAnimSvgObj.contentDocument.querySelector(\"#planet\"),\n      lightAround: secondAnimSvgObj.contentDocument.querySelector(\"#lightAround\"),\n      basicStyles: function basicStyles(stageTwo) {\n        secondSvgPath(secondAnimSvgParts, stageTwo);\n      }\n    };\n    var thirdAnimSvgParts = {\n      block: thirdAnimSvgObj.contentDocument.querySelector('#block'),\n      platform: thirdAnimSvgObj.contentDocument.querySelector('#platform'),\n      shadow: thirdAnimSvgObj.contentDocument.querySelector('#shadow'),\n      wires: thirdAnimSvgObj.contentDocument.querySelector('#wires'),\n      basicStyles: function basicStyles(stageTwo) {\n        thirdSvgPath(thirdAnimSvgParts, stageTwo);\n      }\n    };\n\n    window.onload = function () {\n      if (window.pageYOffset + innerHeight > whatWeDo.offsetHeight) {\n        firstAnimSvgParts.basicStyles(allStages);\n        secondAnimSvgParts.basicStyles(allStages);\n        thirdAnimSvgParts.basicStyles(allStages);\n      } else {\n        firstAnimSvgParts.basicStyles(stageTwo); //Применим начальное состояние к элементам, соответствующие проскроленному участку\n\n        secondAnimSvgParts.basicStyles(stageTwo);\n        thirdAnimSvgParts.basicStyles(stageTwo);\n      }\n    };\n\n    addEventListener('scroll', function () {\n      stageTwo = (pageYOffset - document.querySelector('main').offsetTop) / innerHeight;\n\n      if (window.pageYOffset + innerHeight <= whatWeDo.offsetHeight) {\n        firstSvgPath(firstAnimSvgParts, stageTwo);\n        secondSvgPath(secondAnimSvgParts, stageTwo);\n        thirdSvgPath(thirdAnimSvgParts, stageTwo);\n      }\n    });\n  });\n  var screenEl = document.querySelector('section.whatWeDo');\n  var duration = 4;\n  var speed = .2;\n  var backgroundObj2 = document.querySelector('.background');\n  var backgroundObj3 = document.querySelector('.background3');\n  var backgroundObj4 = document.querySelector('.background4');\n  methodVisible(backgroundObj2, 26);\n  methodVisible(backgroundObj3, 18);\n  methodVisible(backgroundObj4, 8);\n  var allText = document.querySelectorAll('.textAnim');\n  animText(allText);\n  var clients = document.querySelectorAll('.anim');\n  addEventListener('scroll', function () {\n    if (clients[0].offsetTop + clients[0].offsetHeight / 4 < pageYOffset + innerHeight) {\n      for (var i = 0; i < clients.length; i++) {\n        clients[i].style.opacity = 1;\n        clients[i].style.transform = 'translate(0)';\n      }\n    } else {\n      for (var _i2 = 0; _i2 < clients.length; _i2++) {\n        clients[_i2].style.opacity = 0;\n        clients[_i2].style.transform = 'translate(-3rem)';\n      }\n    }\n  });\n} else {\n  var onClick = function onClick(obj) {\n    obj.addEventListener('click', function (e) {\n      _hooks.classList.toggle('show'); // e.stopPropagation();\n\n\n      stopScroll();\n      rotateLines(btnMenu);\n    });\n  };\n\n  var btnMenu = document.querySelector('.btn-menu');\n\n  var _hooks = document.querySelector('.hooks');\n\n  var lines = document.querySelectorAll('.btn-menu hr');\n  var btns = document.querySelectorAll('.hooks a');\n  onClick(btnMenu);\n  onClick(btns[0]);\n  onClick(btns[1]);\n  onClick(btns[2]);\n  onClick(btns[3]);\n  onClick(btns[4]);\n}\n\nfunction rotateLines(btnMenu) {\n  btnMenu.classList.toggle('burgerRotate');\n} // console.log();\n\n\nfunction stopScroll() {\n  document.body.style.overflow = document.body.style.overflow === \"\" ? \"hidden\" : \"\";\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/index.js\n");

/***/ })

/******/ });